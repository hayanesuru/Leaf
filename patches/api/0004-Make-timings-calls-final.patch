From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sat, 24 Dec 2022 22:37:29 +0100
Subject: [PATCH] Make timings calls final

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Gale - https://galemc.org

diff --git a/src/main/java/co/aikar/timings/FullServerTickHandler.java b/src/main/java/co/aikar/timings/FullServerTickHandler.java
index 73b125979e2f2dfd13cbf689a90b29cc68a36e09..d8dfaf5041ccf3f360e0bd94bf03580a8b3d9a38 100644
--- a/src/main/java/co/aikar/timings/FullServerTickHandler.java
+++ b/src/main/java/co/aikar/timings/FullServerTickHandler.java
@@ -22,8 +22,7 @@ public class FullServerTickHandler extends TimingHandler {
     }
 
     @NotNull
-    @Override
-    public Timing startTiming() {
+    public Timing startTimingFullServerTick() { // Gale - final timings calls
         if (TimingsManager.needsFullReset) {
             TimingsManager.resetTimings();
         } else if (TimingsManager.needsRecheckEnabled) {
@@ -32,8 +31,7 @@ public class FullServerTickHandler extends TimingHandler {
         return super.startTiming();
     }
 
-    @Override
-    public void stopTiming() {
+    public void stopTimingFullServerTick() { // Gale - final timings calls
         super.stopTiming();
         if (!isEnabled()) {
             return;
diff --git a/src/main/java/co/aikar/timings/TimingHandler.java b/src/main/java/co/aikar/timings/TimingHandler.java
index 199789d56d22fcb1b77ebd56805cc28aa5a5ab0a..51d54b87106aa17c2de9ab22eae22d176c7d0bfc 100644
--- a/src/main/java/co/aikar/timings/TimingHandler.java
+++ b/src/main/java/co/aikar/timings/TimingHandler.java
@@ -97,7 +97,7 @@ class TimingHandler implements Timing {
     }
 
     @NotNull
-    public Timing startTiming() {
+    public final Timing startTiming() { // Gale - final timings calls
         if (!enabled || !Bukkit.isPrimaryThread()) {
             return this;
         }
@@ -109,7 +109,7 @@ class TimingHandler implements Timing {
         return this;
     }
 
-    public void stopTiming() {
+    public final void stopTiming() { // Gale - final timings calls
         if (!enabled || timingDepth <= 0 || start == 0 || !Bukkit.isPrimaryThread()) {
             return;
         }
diff --git a/src/main/java/co/aikar/timings/UnsafeTimingHandler.java b/src/main/java/co/aikar/timings/UnsafeTimingHandler.java
index 632c4961515f5052551f841cfa840e60bba7a257..49180ea7879c64af3cd5143a34783d564746b504 100644
--- a/src/main/java/co/aikar/timings/UnsafeTimingHandler.java
+++ b/src/main/java/co/aikar/timings/UnsafeTimingHandler.java
@@ -23,31 +23,4 @@
  */
 package co.aikar.timings;
 
-import org.bukkit.Bukkit;
-import org.jetbrains.annotations.NotNull;
-
-class UnsafeTimingHandler extends TimingHandler {
-
-    UnsafeTimingHandler(@NotNull TimingIdentifier id) {
-        super(id);
-    }
-
-    private static void checkThread() {
-        if (!Bukkit.isPrimaryThread()) {
-            throw new IllegalStateException("Calling Timings from Async Operation");
-        }
-    }
-
-    @NotNull
-    @Override
-    public Timing startTiming() {
-        checkThread();
-        return super.startTiming();
-    }
-
-    @Override
-    public void stopTiming() {
-        checkThread();
-        super.stopTiming();
-    }
-}
+class UnsafeTimingHandler {} // Gale - final timings calls
